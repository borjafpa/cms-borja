plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'idea'
}

group = 'com.borja'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Encode / Decode user password
	implementation 'javax.xml.bind:jaxb-api:2.3.1'

	// JWT Token
	implementation 'io.jsonwebtoken:jjwt:0.9.1'

	// AWS - s3
	implementation 'com.amazonaws:aws-java-sdk:1.12.472'

	implementation 'io.cucumber:cucumber-jvm:7.12.0'
	implementation 'io.cucumber:cucumber-java:7.12.0'

	implementation 'io.cucumber:cucumber-spring:7.12.0'

	testImplementation 'io.cucumber:cucumber-junit:7.12.0'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:mongodb'

	testImplementation 'org.junit.vintage:junit-vintage-engine:5.9.3'

}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register('testIntegration', Test) {
	description = 'Runs integration tests.'
	group = 'verification'

	testClassesDirs = sourceSets.testIntegration.output.classesDirs
	classpath = sourceSets.testIntegration.runtimeClasspath
	shouldRunAfter test

	useJUnitPlatform()

	exclude()

	testLogging {
		events "passed"
	}
}

sourceSets {
	testIntegration {
		java.srcDir file("src/testIntegration/java")
		resources.srcDir file("src/testIntegration/resourcesIntegration")
		runtimeClasspath += sourceSets.main.runtimeClasspath + sourceSets.test.runtimeClasspath
		compileClasspath += sourceSets.main.compileClasspath + sourceSets.test.compileClasspath
	}
}

idea {
	module {
		sourceSets.testIntegration.allSource.srcDirs.each { srcDir -> module.testSourceDirs += srcDir }
	}
}

